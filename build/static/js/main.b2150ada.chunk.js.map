{"version":3,"sources":["data.js","components/FavoriteButton.js","components/Recipe.js","features/allRecipes/AllRecipes.js","features/allRecipes/allRecipesSlice.js","features/favoriteRecipes/favoriteRecipesSlice.js","utilities.js","app/App.js","reportWebVitals.js","features/recipesReducer.js","app/store.js","index.js"],"names":["allRecipesData","id","name","img","FavoriteButton","children","onClickHandler","onClick","console","log","Recipe","recipe","className","tabIndex","src","alt","AllRecipes","visibleAllRecipes","dispatch","useEffect","type","payload","map","i","addRecipe","handleAddRecipe","getFilteredRecipes","recipes","searchTerm","filter","toLowerCase","includes","App","props","state","allRecipes","visibleFavoriteRecipes","favoriteRecipes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","recipesReducer","action","types","store","createStore","render","ReactDOM","StrictMode","getState","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.b2150ada.chunk.js","sourcesContent":["const allRecipesData = [\n  { id: 0, name: \"biscuit\", img: \"img/biscuit.jpeg\" },\n  { id: 1, name: \"cake\", img: \"img/cake.jpeg\" },\n  { id: 2, name: \"juice\", img: \"img/juice.jpeg\" },\n];\nexport default allRecipesData;\n","import React from \"react\";\nimport { FcLike } from \"react-icons/fc\";\n\nexport default function FavoriteButton({ children, onClickHandler }) {\n  return (\n    <button onClick={onClickHandler}>\n      <FcLike />\n      {console.log(\n        \"these are children from AllRecipes->FavoriteButton\",\n        children\n      )}\n      {children}\n    </button>\n  );\n}\n","import React from \"react\";\n\nexport default function Recipe({ recipe, children }) {\n  return (\n    //tabIndex means the element should be focusable in sequential keyboard navigation.\n    <div key={recipe.id} className=\"recipe\" tabIndex={0}>\n      <span className=\"recipe-container\">\n        <h2 className=\"recipe-name\">{recipe.name}</h2>\n        <div className=\"image-container\">\n          <img src={recipe.img} alt=\"\" className=\"recipe-image\" />\n        </div>\n      </span>\n      {\"children from allRecipes-> Recipe\"}\n      {children}\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { loadData } from \"./allRecipesSlice\";\nimport { addRecipe } from \"../favoriteRecipes/favoriteRecipesSlice\";\n\nimport FavoriteButton from \"../../components/FavoriteButton\";\nimport Recipe from \"../../components/Recipe\";\n\nexport default function AllRecipes({ visibleAllRecipes, dispatch }) {\n  const onFirstRender = () => {\n    dispatch(loadData());\n  };\n  useEffect(onFirstRender, []);\n\n  const handleAddRecipe = (recipe) => {\n    dispatch(addRecipe(recipe));\n  };\n  return (\n    <div>\n      {visibleAllRecipes.map((recipe, i) => (\n        <Recipe recipe={recipe} key={recipe.id}>\n          <FavoriteButton onClickHandler={() => handleAddRecipe(recipe)}>\n            Add to Favorites\n          </FavoriteButton>\n        </Recipe>\n      ))}\n    </div>\n  );\n}\n","import allRecipesData from \"../../data\";\nconst initialAllRecipes = [];\n\n//actions\nexport const loadData = () => {\n  return {\n    type: \"allRecipes/loadData\",\n    payload: allRecipesData,\n  };\n};\n\n//reducer\nconst allRecipesReducer = (allRecipes = initialAllRecipes, action) => {\n  switch (action.type) {\n    case \"allRecipes/loadData\":\n      return action.payload;\n    default:\n      return allRecipes;\n  }\n};\nexport default allRecipesReducer;\n","const initialFavoriteRecipes = [];\n\n//actions\nexport const addRecipe = (recipe) => {\n  return {\n    type: \"favoriteRecipes/addRecipe\",\n    payload: recipe,\n  };\n};\nexport const removeRecipe = (recipe) => {\n  return {\n    type: \"favoriteRecipes/removeRecipe\",\n    payload: \"recipe\",\n  };\n};\n\n//reducer\nconst favoriteRecipesReducer = (\n  favoriteRecipes = initialFavoriteRecipes,\n  action\n) => {\n  switch (action.type) {\n    case \"favoriteRecipes/addRecipe\":\n      return [...favoriteRecipes, action.payload];\n    case \"favoriteRecipes/removeRecipe\":\n      return favoriteRecipes.filter(\n        (recipe) => recipe.id !== action.payload.id\n      );\n    default:\n      return favoriteRecipes;\n  }\n};\nexport default favoriteRecipesReducer;\n","/**\n *filters through recipe[] with the searchTerm\n */\nexport const getFilteredRecipes = (recipes, searchTerm) => {\n  return recipes.filter((recipe) =>\n    recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n};\n","import React from \"react\";\nimport AllRecipes from \"../features/allRecipes/AllRecipes\";\nimport FavoriteRecipes from \"../features/favoriteRecipes/FavoriteRecipes\";\nimport SearchTerm from \"../features/searchTerm/SearchTerm\";\nimport { getFilteredRecipes } from \"../utilities\";\nimport \"./App.css\";\n\nfunction App(props) {\n  const { state, dispatch } = props;\n  const visibleAllRecipes = getFilteredRecipes(\n    state.allRecipes,\n    state.searchTerm\n  );\n  const visibleFavoriteRecipes = getFilteredRecipes(\n    state.favoriteRecipes,\n    state.searchTerm\n  );\n  return (\n    <main className=\"App\">\n      <section>\n        <SearchTerm searchTerm={state.searchTerm} dispatch={dispatch} />\n      </section>\n      <section>\n        <h2>Favorite Recipes</h2>\n        <FavoriteRecipes\n          favoriteRecipes={visibleFavoriteRecipes}\n          dispatch={dispatch}\n        />\n      </section>\n      <section>\n        <h2>All Recipes</h2>\n        <AllRecipes allRecipes={visibleAllRecipes} dispatch={dispatch} />\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//reducer for recipe\n\nconst initialState = {\n  allRecipes: [],\n  favoriteRecipes: [],\n  searchTerm: \"\",\n};\n\nconst recipesReducer = (state = initialState, action) => {\n  switch (action.types) {\n    case \"allRecipes/loadData\":\n      return {\n        ...state,\n        allRecipes: action.payload,\n      };\n    case \"searchTerm/setSearchTerm\":\n      return {\n        ...state,\n        searchTerm: action.payload,\n      };\n    case \"searchTerm/clearSearchTerm\":\n      return {\n        ...state,\n        searchTerm: \"\",\n      };\n    case \"favoriteRecipes/addRecipe\":\n      return {\n        ...state,\n        favoriteRecipes: [...state.favoriteRecipes, action.payload],\n      };\n    case \"favoriteRecipes/removeRecipe\":\n      return {\n        ...state,\n        favoriteRecipes: state.favoriteRecipes.filter(\n          (recipe, i) => recipe.id !== action.payload.id\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default recipesReducer;\n","//composeReducers here\nimport { createStore } from \"redux\";\nimport recipesReducer from \"../features/recipesReducer\";\n//import {combineReducers} from \"redux\";\nimport allRecipesReducer from \"../features/allRecipes/allRecipesSlice\";\nimport favoriteRecipesReducer from \"../features/favoriteRecipes/favoriteRecipesSlice\";\nimport searchTermReducer from \"../features/searchTerm/searchTermSlice\";\n\nconst rootReducer = (state = {}, action) => {\n  const nextState = {\n    allRecipes: allRecipesReducer(state.allRecipes, action),\n    favoriteRecipes: favoriteRecipesReducer(state.favoriteRecipes, action),\n    searchTerm: searchTermReducer(state.searchTerm, action),\n  };\n  return nextState;\n};\n\nconst store = createStore(recipesReducer);\n\nexport default store;\n\n//const reducerNextState = {\n//allRecipes: allRecipesReducer,\n//favoriteRecipes: favoriteRecipesReducer,\n//searchTerm: searchTermReducer\n//}\n//\n//const rootReducer = combineReducers(reducerNextState);\n//const store = createStore(rootReducer);\n//\n//or\n//\n//const store = createStore(combineReducers(reducerNextState))\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./app/store\";\n\nconst render = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App state={store.getState()} dispatch={store.dispatch} />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n};\nrender();\nconst unsubscribe = store.subscribe(render);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}